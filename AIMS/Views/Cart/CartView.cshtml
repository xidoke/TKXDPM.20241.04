@using AIMS.Data.Entities
@model List<CartItem>

@{
    ViewData["Title"] = "Giỏ hàng";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Giỏ hàng - AIMS</title>
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/cart.css" />
    <style>
        .groupbox {
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
            margin-bottom: 20px;
        }

            .groupbox h2 {
                margin-top: 0;
                margin-bottom: 10px;
                font-weight: bold;
            }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="groupbox">
            <h2>Giỏ hàng cá nhân</h2>
            @if (Model.Any())
            {
                <form id="cartForm" asp-controller="Order" asp-action="ProcessOrderFromCart" method="post">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="thead-dark">
                                <tr>
                                    <th></th>
                                    <th>Tên sản phẩm</th>
                                    <th>Ảnh mô tả</th>
                                    <th>Giá</th>
                                    <th>Số lượng</th>
                                    <th>Trạng thái</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" name="SelectedItems[@i].IsSelected" value="true" checked class="cart-checkbox" data-price="@Model[i].Price" data-quantity-field="quantity-@i" />
                                            <input type="hidden" name="SelectedItems[@i].IsSelected" value="false" />
                                            <input type="hidden" name="SelectedItems[@i].ProductId" value="@Model[i].ProductId" />
                                            <input type="hidden" name="SelectedItems[@i].ProductName" value="@Model[i].ProductName" />
                                            <input type="hidden" name="SelectedItems[@i].Price" value="@Model[i].Price" />
                                        </td>
                                        <td>@Model[i].ProductName</td>
                                        <td>
                                            <img src="@Model[i].ImageUrl" alt="@Model[i].ProductName" style="width: 100px;" />
                                        </td>
                                        <td>@Model[i].Price.ToString("N0") đ</td>
                                        <td>
                                            <input type="number" id="quantity-@i" name="SelectedItems[@i].Quantity" value="@Model[i].Quantity" min="1" class="form-control quantity" style="width: 80px;" data-product-id="@Model[i].ProductId" data-initial-value="@Model[i].Quantity" />
                                        </td>
                                        <td id="status-@i"></td>
                                        <td>
                                            <a asp-action="RemoveFromCart" asp-route-productId="@Model[i].ProductId" class="btn btn-danger"><i class="fa fa-trash" aria-hidden="true"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-12 text-right">
                            <h4>Tổng giá trị sản phẩm đã chọn: <span id="grand-total">@ViewBag.GrandTotal.ToString("N0") VNĐ</span></h4>
                            <button type="submit" class="btn btn-success" id="orderButton" form="cartForm">Đặt hàng</button>
                            <button type="button" class="btn btn-secondary" id="updateCartButton">Cập nhật giỏ hàng</button>
                        </div>
                    </div>
                </form>
            }
            else
            {
                <div class="alert alert-info">
                    Giỏ hàng của bạn đang trống.
                    <a asp-controller="Home" asp-action="Index" class="alert-link">Xem thêm sản phẩm!</a>
                </div>
            }
        </div>
    </div>

    @section Scripts {
        <script>
            $(document).ready(function () {
                // Tính tổng tiền
                function updateGrandTotal() {
                    let grandTotal = 0;
                    $('.cart-checkbox:checked').each(function () {
                        const price = parseFloat($(this).data('price'));
                        const quantityFieldId = $(this).data('quantity-field');
                        const quantity = parseInt($(`#${quantityFieldId}`).val());
                        grandTotal += price * quantity;
                    });
                    $('#grand-total').text(grandTotal.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
                }

                // Cập nhật tổng tiền khi checkbox thay đổi
                $('.cart-checkbox').change(function () {
                    updateGrandTotal();
                });

                // Cập nhật tổng tiền và lưu thay đổi khi số lượng thay đổi
                $('.quantity').change(function () {
                    const quantity = parseInt($(this).val());
                    const initialQuantity = parseInt($(this).data('initial-value'));
                    const productId = $(this).data('product-id');
                    const index = $(this).closest('tr').index();

                    // Khôi phục giá trị ban đầu nếu số lượng < 1
                    if (quantity < 1) {
                        $(this).val(initialQuantity);
                    }
                    updateGrandTotal();

                    // Cập nhật số lượng trong giỏ hàng
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateQuantity", "Cart")',
                        data: {
                            productId: productId,
                            quantity: quantity
                        },
                        success: function (response) {
                            $('#grand-total').text(response.grandTotal + " VNĐ");
                        },
                        error: function () {
                            alert('Có lỗi xảy ra khi cập nhật giỏ hàng.');
                        }
                    });

                    // Kiểm tra số lượng tồn kho
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("CheckStock", "Cart")',
                        data: {
                            productId: productId,
                            quantity: quantity
                        },
                        success: function (response) {
                            $(`#status-${index}`).text(response.status);
                        },
                        error: function () {
                            alert('Có lỗi xảy ra khi kiểm tra số lượng tồn kho.');
                        }
                    });
                });

                // Kiểm tra số lượng tồn kho và hiển thị thông báo khi click "Cập nhật giỏ hàng"
                $('#updateCartButton').click(function () {
                    var outOfStock = false;
                    $('.quantity').each(function () {
                        const quantity = parseInt($(this).val());
                        const productId = $(this).data('product-id');
                        const index = $(this).closest('tr').index();

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("CheckStock", "Cart")',
                            data: {
                                productId: productId,
                                quantity: quantity
                            },
                            async: false, // Đặt async: false để đợi response trước khi kiểm tra
                            success: function (response) {
                                $(`#status-${index}`).text(response.status);

                                if (response.status.includes("Không đủ số lượng")) {
                                    outOfStock = true;
                                    alert("Không đủ số lượng cho sản phẩm " + $(`#quantity-${index}`).closest("tr").find("td:eq(1)").text() + ". Vui lòng kiểm tra lại.");
                                }
                            },
                            error: function () {
                                alert('Có lỗi xảy ra khi kiểm tra số lượng tồn kho.');
                            }
                        });
                    });

                    if (!outOfStock) {
                        alert('Giỏ hàng đã được cập nhật!');
                    }
                });

                // Kiểm tra trước khi submit form "Đặt hàng"
                $('#cartForm').submit(function (event) {
                    var isValid = true;
                    var errorMessages = [];

                    // Kiểm tra đã chọn sản phẩm chưa
                    if ($('.cart-checkbox:checked').length === 0) {
                        errorMessages.push('Vui lòng chọn ít nhất một sản phẩm để đặt hàng.');
                        isValid = false;
                    }

                    // Kiểm tra số lượng tồn kho
                    $('.cart-checkbox:checked').each(function () {
                        const index = $(this).closest('tr').index();
                        const status = $(`#status-${index}`).text();
                        const productName = $(this).closest('tr').find('td:eq(1)').text();

                        if (status.includes("Không đủ số lượng")) {
                            errorMessages.push(`Không đủ số lượng cho sản phẩm ${productName}. Vui lòng kiểm tra lại.`);
                            isValid = false;
                        }
                    });

                    // Hiển thị thông báo lỗi (nếu có)
                    if (!isValid) {
                        event.preventDefault(); // Ngăn chặn submit form
                        alert(errorMessages.join("\n"));
                    }
                });

                // Tính tổng tiền ban đầu khi load trang
                updateGrandTotal();
            });
        </script>
    }
</body>
</html>